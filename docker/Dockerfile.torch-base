ARG ver_cuda="11.1"
ARG ver_cudnn="8"
ARG ver_python="3.8"
ARG ver_pytorch="1.8.2"     # LTS version of pytorch
ARG cuda_tag="${ver_cuda}-cudnn${ver_cudnn}-devel-ubuntu18.04"

FROM nvidia/cuda:${cuda_tag}

ARG cuda_tag
RUN echo "building image based on nvidia/cuda:${cuda_tag}"

ARG ver_pytorch
RUN echo "version of pytorch: ${ver_pytorch}"

ARG ver_python
RUN echo "version of python: ${ver_python}"

ARG ver_cuda
RUN echo "version of cuda: ${ver_cuda}"

ENV TORCH_CUDA_ARCH_LIST="6.0 6.1 7.0+PTX"

# set work directory
WORKDIR /usr/src/app

# set environment variables
# to prevent generation of __pycache__ folders
ENV PYTHONDONTWRITEBYTECODE 1
ENV PYTHONUNBUFFERED 1

# install dependencies
RUN apt-get update && \
    apt-get install -y build-essential curl libgtk-3-dev && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*

# # install dependencies for OTE-SDK
# RUN apt-get install -y libsasl2-dev python-dev libldap2-dev libssl-dev

COPY --from=openvino/ubuntu18_dev:2021.4 /opt/intel/openvino /opt/intel/openvino

RUN curl -o ~/miniconda.sh https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh && \
     chmod +x ~/miniconda.sh && \
     ~/miniconda.sh -b -p /opt/conda && \
     rm ~/miniconda.sh
ENV PATH /opt/conda/bin:$PATH

RUN conda install -y python=${ver_python} cython
RUN conda install -y pytorch=$ver_pytorch torchvision cudatoolkit=$ver_cuda -c pytorch-lts -c nvidia && conda clean -ya

RUN echo "source /opt/intel/openvino/bin/setupvars.sh" >> ~/.bash_profile
ENV BASH_ENV "~/.bash_profile"
